<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.java.emp.mapper.EmpMapper">
	<select id="getEmpList" resultType="EmpVO">
		Select * from employees
<!-- 		<where>
			<if test="departmentId" != null>
				department_id = #{departmentId} AND
			</if>
			<if test="managerId" != null>
				manager_id = #{managerId} AND
			</if>
			job_id=#{jobId}
		</where> -->
	</select>
	<select id="getEmp" parameterType="EmpVO" resultType="EmpVO">
		SELECT  employee_id, 
				first_name, 
				last_name,
				<if test="!employeeId.equals('100')">
					email, 
				</if>
				job_id, 
				salary
		FROM 	employees
		WHERE 	employee_id = #{employeeId}
	</select>
	
	<insert id="insertEmp" parameterType="EmpVO" >
		<!-- insert, update 태그에서만 사용 가능한 하위태그 -->
		<!-- order : insert or update -->	
		<selectKey keyProperty="employeeId" resultType="String" order="BEFORE">
			<!-- 반환되는 select 절의 값이 하나여야 함 -->
			SELECT MAX(employee_id)+1 FROM employees
		</selectKey>
		INSERT INTO employees(employee_id, first_name, last_name, 
								email, hire_date, job_id, salary)
					VALUES (#{employeeId},#{firstName},#{lastName},
								#{email}, sysdate, #{jobId},#{salary})
	</insert>
	
	<!-- 자동으로 파라미터 타입으로 매칭이 되어 생략 가능하지만 권장하지 않는다 -->
	<update id="updateSalary" parameterType="Integer">
		UPDATE employees
		SET salary = salary * 1.1
		WHERE employee_id = #{empId}
	</update>

	<update id="updateEmp" parameterType="EmpVO">
		UPDATE 	employees
		<!-- SET 	first_name = #{firstName},
				last_name = #{lastName},
				email = #{email} -->
		<!-- 공백이 들어올 경우를 if문을 통해 걸러낼 수 있다 (test앞엔 #{}X) -->
		<set>
			<if test="firstName != null">
				first_name = #{firstName},
			</if>
			<if test="lastName != null">
				last_name = #{lastName},
			</if>
			<if test="email != null">
				email = #{email}
			</if>
		</set>
		WHERE 	employee_id = #{employeeId}
	</update>
	
</mapper>